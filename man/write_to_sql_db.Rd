% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_data.R
\name{write_to_sql_db}
\alias{write_to_sql_db}
\title{Write to a MySQL Database with error checking and email alerting on failure}
\usage{
write_to_sql_db(
  conn,
  table_name,
  df_to_write,
  schema,
  overwrite,
  db_name,
  is_log_con = FALSE,
  continue_on_error = FALSE,
  ...
)
}
\arguments{
\item{conn}{a DBI database connection}

\item{table_name}{name of the table to write to}

\item{df_to_write}{data frame we will write to _table_name_}

\item{schema}{database we will write to}

\item{overwrite}{a logical that controls whether we will overwrite the table}

\item{db_name}{the name of the database written to}

\item{is_log_con}{if FALSE then log failures, if TRUE then do not attempt to log errors}

\item{continue_on_error}{if TRUE then continue execution on error, if FALSE then quit non interactive sessions on error}

\item{...}{Additional parameters that will be passed to DBI::dbWriteTable}
}
\value{
No value is returned
}
\description{
Write to a MySQL Database with error checking and email alerting on failure
}
\examples{
\dontrun{
write_to_sql_db(
  conn = con,
  table_name = "my_table",
  df_to_write = rule_output,
  schema = Sys.getenv("ETL_DB_SCHEMA"),
  overwrite = FALSE,
  db_name = Sys.getenv("ETL_DB_NAME"),
  append = TRUE
)
}
}
